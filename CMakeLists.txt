cmake_minimum_required( VERSION 3.8 )

project( openssl )

include( openssl.cmake )
include( lipo.cmake )

set( INSTALL_DIR ${CMAKE_BINARY_DIR}/openssl )

set( SDKs iphoneos iphonesimulator )
set( TARGET_ARCHITECTURES_iphoneos arm64 )
set( TARGET_ARCHITECTURES_iphonesimulator x86_64 )
set( DEBUG_ENABLED false )
set( BITCODE_ENABLED true )

set( OPENSSL_TARGETS )
set( OPENSSL_INCLUDES )
set( OPENSSL_THIN_CRYPTO_LIBRARIES )
set( OPENSSL_THIN_SSL_LIBRARIES )
foreach( SDK ${SDKs} )
    message( "Setup ${SDK}" )
    set( OPENSSL_SDK_OUTPUT_DIR ${INSTALL_DIR}/${SDK} )

    set( OPENSSL_TARGETS_${SDK} )
    set( OPENSSL_INCLUDES_${SDK} )
    set( OPENSSL_THIN_CRYPTO_LIBRARIES_${SDK} )
    set( OPENSSL_THIN_SSL_LIBRARIES_${SDK} )

    BuildOpenSSL( ${SDK} ${DEBUG_ENABLED} ${BITCODE_ENABLED} ${OPENSSL_SDK_OUTPUT_DIR} )

    list( APPEND OPENSSL_TARGETS ${OPENSSL_TARGETS_${SDK}} )
    list( APPEND OPENSSL_INCLUDES ${OPENSSL_INCLUDES_${SDK}} )
    list( APPEND OPENSSL_THIN_CRYPTO_LIBRARIES ${OPENSSL_THIN_CRYPTO_LIBRARIES_${SDK}} )
    list( APPEND OPENSSL_THIN_SSL_LIBRARIES ${OPENSSL_THIN_SSL_LIBRARIES_${SDK}} )
endforeach( SDK )

set( OPENSSL_LIBCRYPTO ${CMAKE_STATIC_LIBRARY_PREFIX}crypto${CMAKE_STATIC_LIBRARY_SUFFIX} )
set( OPENSSL_LIBCRYPTO_PATH ${INSTALL_DIR}/lib/${OPENSSL_LIBCRYPTO} )
LipoLibrary( "${OPENSSL_THIN_CRYPTO_LIBRARIES}" ${OPENSSL_LIBCRYPTO_PATH} )

set( OPENSSL_LIBSSL ${CMAKE_STATIC_LIBRARY_PREFIX}ssl${CMAKE_STATIC_LIBRARY_SUFFIX} )
set( OPENSSL_LIBSSL_PATH ${INSTALL_DIR}/lib/${OPENSSL_LIBSSL} )
LipoLibrary( "${OPENSSL_THIN_SSL_LIBRARIES}" ${OPENSSL_LIBSSL_PATH} )

list( GET OPENSSL_INCLUDES 0 OPENSSL_INCLUDE_DIR )
add_custom_command( OUTPUT ${INSTALL_DIR}/include
        COMMAND ${CMAKE_COMMAND} -E copy_directory ${OPENSSL_INCLUDE_DIR} ${INSTALL_DIR}/include
        COMMENT "Copying OpenSSL ${OPENSSL_INCLUDE_DIR}" )

add_custom_target( openssl_install ALL
        DEPENDS ${OPENSSL_LIBCRYPTO_PATH} ${OPENSSL_LIBSSL_PATH} ${INSTALL_DIR}/include )
add_dependencies( openssl_install ${OPENSSL_TARGETS} )
